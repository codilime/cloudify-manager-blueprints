#############################
# Provider specific Inputs
#############################

# Credentails and identification in order to connect to openstack
#keystone_username: ''
#keystone_password: ''
#keystone_tenant_name: ''
#keystone_url: ''
#region: ''

# Optional. Use this in order to override the default URLs provided by the keystone_url
#nova_url: ''
#neutron_url: ''

# The bootstrap process creates 2 key pairs in order to connect to the management machine and application hosts.
# Set these properties to true (one or both) if you want to use existing key pairs, and not create new ones.
#use_existing_manager_keypair: false
#use_existing_agent_keypair: false

# These are the local paths where the key files will be created at bootstrap.
# If existing key pairs are used (see above), the key files should be at these paths for cloudify to find.
#ssh_key_filename: ~/.ssh/cloudify-manager-kp.pem
#agent_private_key_path: ~/.ssh/cloudify-agent-kp.pem

# These are the key names in openstack that will be created at bootstrap.
# If existing key pairs are used (see above), bootstrap will use the provided names, and will not create new ones.
#manager_public_key_name: ''
#agent_public_key_name: ''

# Image and flavor that will be used to create the manager machine.
#image_id: ''
#flavor_id: ''

# Name of the external openstack network
#external_network_name: ''

# SSH user used to connect to the manager
#ssh_user: centos

# Names of the openstack components
#manager_server_name: cloudify-manager-server
#management_network_name: cloudify-management-network
#management_subnet_name: cloudify-management-network-subnet
#management_router: cloudify-management-router
#manager_security_group_name: cloudify-sg-manager
#agents_security_group_name: cloudify-sg-agents
#manager_port_name: cloudify-manager-port

# Optional prefix for each openstack component
#resources_prefix: ''

# This is the default user that the manager will use while connecting to an application host.
# This user can be overriden in different places.
#agents_user: ''

#############################
# Agent Packages
#############################

# The key names must be in the format: distro_release_agent (e.g. ubuntu_trusty_agent)
# as the key is what's used to name the file, which later allows our
# agent installer to identify it for your distro and release automatically.
# Note that the windows agent key name MUST be `cloudify_windows_agent`
#agent_package_urls:
#   ubuntu_trusty_agent: ''
#   ubuntu_precise_agent: ''
#   centos_core_agent: ''
#   centos_final_agent: ''
#   cloudify_windows_agent: ''

#############################
# Cloudify Modules
#############################

#rest_service_rpm_url:
#management_worker_rpm_source_url:
#amqpinflux_rpm_source_url:
#cloudify_resources_url:

#############################
# Python Inputs
#############################
#pip_source_rpm_url: ''

#############################
# Java Inputs
#############################
#java_source_url: ''

#############################
# RabbitMQ Inputs
#############################
# RabbitMQ Distribution of Erlang
#erlang_source_url: ''
#rabbitmq_source_url: ''

# Allows defining the message-ttl for the different types of queues.
# https://www.rabbitmq.com/ttl.html
#rabbitmq_events_queue_message_ttl:
#rabbitmq_logs_queue_message_ttl:
#rabbitmq_metrics_queue_message_ttl:

# note that for each of the queue length limit properties, new messages
# will be queued in RabbitMQ and old messages will be deleted once the
# limit is reached!
# Note this is NOT the message byte length!
# https://www.rabbitmq.com/maxlength.html
#rabbitmq_events_queue_length_limit:
#rabbitmq_logs_queue_length_limit:
#rabbitmq_metrics_queue_length_limit:


# RabbitMQ File Descriptors Limit
#rabbitmq_fd_limit:

#############################
# Elasticsearch Inputs
#############################
#elasticsearch_curator_rpm_source_url: ''

# https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html
#elasticsearch_heap_size:

# This allows to provide any JAVA_OPTS to Elasticsearch.
#elasticsearch_java_opts: ''

# The index for events will be named `logstash-YYYY.mm.dd`.
# A new index corresponding with today's date will be added each day.
# Elasticsearch Curator is used to rotate the indices on a daily basis
# via a cronjob. This allows to determine the number of days to keep.
#elasticsearch_index_rotation_interval:

#############################
# Logstash Inputs
#############################
#logstash_source_url: ''

#############################
# Nginx
#############################
#nginx_source_url: ''

#############################
# InfluxDB Inputs
#############################
#influxdb_source_url: ''

#############################
# Riemann Inputs
#############################
#riemann_source_url: ''

# A RabbitMQ Client for Riemann
#langohr_source_url: ''

# Riemann's default daemonizer
#daemonize_source_url: ''

#############################
# WebUI Inputs
#############################
#nodejs_source_url: ''
#webui_source_url: ''

# This is a Cloudify specific redistribution of Grafana.
#grafana_source_url: ''
